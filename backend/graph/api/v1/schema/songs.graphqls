type Song {
    id: UUID!
    status: Status!
    title: LocalizedString!
    collections: [SongCollection!]!
    details: LocalizedString @goField(forceResolver: true)
    participants: [Participant!]!
    audioFiles: [AudioFile!]! @goField(forceResolver: true)
    sheets: [Sheet!]! @goField(forceResolver: true)
}

type SongCollection {
    id: UUID!
    identifier: String
}

interface File {
    id: UUID!
    url: URL!
}

type AudioFile implements File {
    id: UUID!
    url: URL!
}

type VideoFile implements File {
    id: UUID!
    url: URL!
}

enum SheetClef {
    alto
    treble
    bass
}

enum SheetSize {
    large
    medium
    small
}

input SheetRenderOptions {
    clef: SheetClef
    instruments: [String!]
    size: SheetSize
    transposition: Int
}

type Sheet {
    id: UUID!
    fileType: SheetFileType!
    contentType: SheetContent!
    instruments: [String!]!
    render(options: SheetRenderOptions): SheetRenderResult! @goField(forceResolver: true)
}

type SheetRenderResult {
    parts: [String!]!
}

enum SheetContent {
    lead
    lyrics
    fullScore
    fivePart
    smallBand
}

enum SheetFileType {
    musicxml
    pdf
}
